import library "UmlAlexa/UmlAlexa-Lib.xmi" as UmlAlexaLib
import platform "AlexaPlatform"
import platform "SlackPlatform"
import platform "UmlPlatform"
import library "CoreLibrary"

use provider AlexaPlatform.AlexaIntentProvider

on intent CreateClass do
	def class = action UmlPlatform.CreateClass(name : context(Class).get("name"))
	session.store("class", class)
	action AlexaPlatform.Reply(message : "Created class " + context(Class).get("name"))
	
on intent AddAttribute do
	def attribute = action UmlPlatform.AddAttribute(class : session.get("class"), name : context(Attribute).get("name"), type : context(Attribute).get("type"))
	action AlexaPlatform.Reply(message : "Created attribute " + context(Attribute).get("name"))
	
on intent Contains do
	def source = action UmlPlatform.GetClass(name : context(Composition).get("source"))
	def target = action UmlPlatform.GetClass(name : context(Composition).get("target"))
	def asso = action UmlPlatform.AddAssociation(source : source, target : target, type : "test")
	action AlexaPlatform.Reply(message : "Done")
	
on intent Save do
	action AlexaPlatform.Reply(message : "Done, I sended it on Slack")
	def saved = action UmlPlatform.Save
	action SlackPlatform.PostFileMessage(message : "Here is your model", file : saved, channel: "Gwendal")
	
on intent Default_Fallback_Intent do
	action AlexaPlatform.Reply(message : "Sorry I didn't get it :/")